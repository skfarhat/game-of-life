task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

allprojects {
    group 'com.samifarhat.oop'
    version '0.3'
//    sourceCompatibility = 1.8

    apply plugin: 'java'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
    }

    test {}

    jacoco {
        toolVersion = "0.7.9"
    }

    task myJavadocs(type: Javadoc) {
        source = sourceSets.main.allJava
    }
}


subprojects {

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
    }

    jacocoTestReport {

        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        classDirectories =  files(sourceSets.main.output)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)

        reports {
            csv.enabled false
            xml.enabled false
            html{
                enabled true
                destination "${buildDir}/reports/jacoco"
            }
        }
    }
}


project(":") {
    task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
        dependsOn = subprojects.test
        additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
        classDirectories = files(subprojects.sourceSets.main.output)
        executionData = files(subprojects.jacocoTestReport.executionData)
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
        onlyIf = {
            true
        }
        doFirst {
            executionData = files(executionData.findAll {
                it.exists()
            })
        }
    }
}

project(":oop") {
    dependencies {
        compile project(":core")
    }

    //create a single Jar with all dependencies
    task fatJar(type: Jar) {
        manifest {
            attributes 'Implementation-Title': 'Welcome to the Jungle!',
                    'Implementation-Version': version,
                    'Main-Class': 'gui.Launcher'
        }
        baseName = project.name + '-all'
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        with jar
    }
}

